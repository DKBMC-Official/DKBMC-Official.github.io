<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology</title>
    <link>https://DKBMC-Official.github.io/</link>
    <description>Recent content on Technology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>©DKBMC. All rights reserved. Powered by GitHub Pages.</copyright>
    <lastBuildDate>Fri, 07 Jun 2019 14:53:34 +0900</lastBuildDate>
    
	<atom:link href="https://DKBMC-Official.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Action Modal</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/quick/</link>
      <pubDate>Fri, 07 Jun 2019 14:53:34 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/quick/</guid>
      <description>1. Sample Setting - height : 250px / header = exist / footer = exist - Preview - Component &amp;lt;aura:component access=&amp;#34;global&amp;#34; implements=&amp;#34;force:hasRecordId,force:hasSObjectName,force:lightningQuickActionWithoutHeader&amp;#34;&amp;gt;&amp;lt;aura:handler name=&amp;#34;init&amp;#34; value=&amp;#34;{!this}&amp;#34; action=&amp;#34;{!c.init}&amp;#34; /&amp;gt; &amp;lt;aura:attribute name=&amp;#34;isMobile&amp;#34; type=&amp;#34;Boolean&amp;#34;/&amp;gt;&amp;lt;div class=&amp;#34;{!v.isMobile ? &amp;#39;quick-modal is-mobile&amp;#39; :&amp;#39;quick-modal&amp;#39; }&amp;#34;&amp;gt;&amp;lt;section class=&amp;#34;modal slds-modal slds-fade-in-open&amp;#34;&amp;gt;&amp;lt;div class=&amp;#34;slds-modal__container modal__container&amp;#34;&amp;gt;&amp;lt;header class=&amp;#34;slds-modal__header&amp;#34;&amp;gt;&amp;lt;h2 id=&amp;#34;modal-heading-01&amp;#34; class=&amp;#34;slds-text-heading_medium slds-hyphenate&amp;#34;&amp;gt;Quick Action Modal&amp;lt;/h2&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;div class=&amp;#34;slds-modal__content modal__content slds-p-around_medium slds-scrollable_y&amp;#34; id=&amp;#34;modal-content-id-1&amp;#34;&amp;gt;&amp;lt;div class=&amp;#34;modal_body&amp;#34;&amp;gt;&amp;lt;p&amp;gt;Confirm ?&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;footer class=&amp;#34;slds-modal__footer&amp;#34;&amp;gt;&amp;lt;button class=&amp;#34;slds-button slds-button_neutral&amp;#34; disabled=&amp;#34;{!</description>
    </item>
    
    <item>
      <title>Apex Trigger</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/apex_trigger/</link>
      <pubDate>Wed, 29 May 2019 10:35:20 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/apex_trigger/</guid>
      <description>Trigger 트리거를 사용하여 Apex를 호출 할 수 있습니다. Apex 트리거를 사용하면 삽입, 업데이트 또는 삭제와 같은 Salesforce 레코드 변경 전후에 사용자 지정 작업을 수행 할 수 있습니다.
 트리거는 다음 유형의 작업 전후에 실행되는 Apex 코드입니다.  insert update delete merge upsert undelete   Before 트리거 레코드 값이 데이터베이스에 저장되기 전에 업데이트 또는 유효성 검사에 사용됩니다.
After 트리거 비동기 이벤트를 실행하는 등 다른 레코드의 변경 사항에 영향을 미치기 위해 사용 동작하는 동안 레코드는 읽기 전용.</description>
    </item>
    
    <item>
      <title>SOQL 기본문법(08)</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/soql08/</link>
      <pubDate>Tue, 28 May 2019 13:31:56 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/soql08/</guid>
      <description>Date Functions (날짜 함수) SOQL 쿼리의 날짜 함수를 사용하면 일별, 월별 또는 회계 연도와 같은 날짜 기간별로 데이터를 그룹화하거나 필터링 할 수 있습니다.
SELECT CALENDAR_YEAR(CreatedDate), SUM(Amount) FROM Opportunity GROUP BY CALENDAR_YEAR(CreatedDate)     Date Function Description Examples     CALENDAR_MONTH() 월 (숫자) 1 for January  12 for December   CALENDAR_QUARTER() 분기 (숫자) 1 for January 1 through March 312 for April 1 through June 303 for July 1 through September 304 for October 1 through December 31   CALENDAR_YEAR() 년 (숫자) 2009   DAY_IN_MONTH() 일자 (숫자) 20 for February 20   DAY_IN_WEEK() 요일 (숫자) 1 for Sunday  7 for Saturday   DAY_IN_YEAR() 년의 일자 (숫자) 32 for February 1   DAY_ONLY() DateTime 형식  날짜만 반환 2009-09-22 for September 22, 2009You can only use DAY_ONLY() with dateTime fields.</description>
    </item>
    
    <item>
      <title>SOQL 기본문법(07)</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/soql07/</link>
      <pubDate>Tue, 28 May 2019 13:09:45 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/soql07/</guid>
      <description>Aggregate Functions 분석을 위해 보고서를 생성하려면 SOQL 쿼리의 GROUP BY 절에 집계 함수를 사용합니다. 집계 함수에는 AVG (), COUNT (), MIN (), MAX (), SUM () 등이 있습니다.
   Aggregate Function Description     AVG() SELECT CampaignId, AVG(Amount)  FROM Opportunity  GROUP BY CampaignId   COUNT() and COUNT(fieldName) SELECT COUNT()  FROM Account  WHERE Name LIKE&amp;rsquo;a%’   SELECT COUNT(Id)  FROM Account  WHERE Name LIKE&amp;rsquo;a%’  GROUP BY 절을 사용하는 경우 COUNT () 대신 COUNT (fieldName)를 사용하십시오.</description>
    </item>
    
    <item>
      <title>SOQL 기본문법(06)</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/soql06/</link>
      <pubDate>Tue, 28 May 2019 11:12:45 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/soql06/</guid>
      <description>HAVING 집계 함수가 반환하는 결과를 필터링
SELECT LeadSource, COUNT(Name) FROM Lead GROUP BY LeadSource HAVING COUNT(Name) &amp;gt; 100 SELECT Name, Count(Id) FROM Account GROUP BY Name HAVING Count(Id) &amp;gt; 1  &amp;nbsp; HAVING을 사용할 때의 고려 사항 ( OK ) SELECT LeadSource, COUNT(Name) FROM Lead GROUP BY LeadSource HAVING COUNT(Name) &amp;gt; 100and LeadSource &amp;gt; &#39;Phone&#39; ( Error ) SELECT LeadSource, COUNT(Name) FROM Lead GROUP BY LeadSource HAVING COUNT(Name) &amp;gt; 100and City LIKE&#39;San%&#39;  &amp;nbsp; TYPEOF (BATA) TYPEOF는 다형성 관계를 포함하는 데이터를 쿼리 할 때 SOQL 쿼리의 SELECT 문에서 사용할 수있는 선택적 절입니다.</description>
    </item>
    
    <item>
      <title>SOQL 기본문법(05)</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/soql05/</link>
      <pubDate>Mon, 27 May 2019 13:09:57 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/soql05/</guid>
      <description>GROUP BY SELECT LeadSource, COUNT(Name) FROM Lead GROUP BY LeadSource SELECT LeadSource FROM Lead GROUP BY LeadSource  &amp;nbsp; GROUP BY 사용시 고려 사항   일부 오브젝트 필드에는 그룹화를 지원하지 않는 필드 유형이 있습니다. 쿼리가 LIMIT 절과 집계 된 함수를 사용하는 경우 GROUP BY 절을 사용해야합니다. GROUP을 사용하는 쿼리에서 __r 구문을 사용하는 자식 관계 식을 사용할 수 없습니다.   &amp;nbsp; GROUP BY와 함께 별칭 사용하기  연관된 필드 바로 뒤에 별명을 지정하십시오.</description>
    </item>
    
    <item>
      <title>SOQL 기본문법(04)</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/soql04/</link>
      <pubDate>Mon, 27 May 2019 11:20:35 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/soql04/</guid>
      <description>범위 사용 &amp;nbsp; USING SCOPE    filterScope Description     Delegated Filter for records delegated to another user for action.  For example, a query could filter for only delegated Task records.   Everything Filter for all records.   Mine Filter for records owned by the user running the query.   MineAndMyGroups Filter for records assigned to the user running the query and the user’s queues.</description>
    </item>
    
    <item>
      <title>SOQL 기본문법(03)</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/soql03/</link>
      <pubDate>Mon, 27 May 2019 11:08:25 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/soql03/</guid>
      <description> 날짜 형식    Format Format Syntax Example     Date only YYYY-MM-DD 1999-01-01   Date, time, and time zone offset YYYY-MM-DDThh:mm:ss+hh:mm  YYYY-MM-DDThh:mm:ss-hh:mm  YYYY-MM-DDThh:mm:ssZ 1999-01-01T23:01:01+01:00  1999-01-01T23:01:01-08:00  1999-01-01T23:01:01Z    SELECT Id FROM Account WHERE CreatedDate &amp;gt; 2005-10-08T01:02:03Z  &amp;nbsp; 날짜 문자    Date Literal Example     YESTERDAY SELECT Id FROM Account WHERE CreatedDate = YESTERDAY   TODAY SELECT Id FROM Account WHERE CreatedDate &amp;gt; TODAY   TOMORROW SELECT Id FROM Opportunity WHERE CloseDate = TOMORROW   LAST_WEEK SELECT Id FROM Account WHERE CreatedDate &amp;gt; LAST_WEEK   THIS_WEEK SELECT Id FROM Account WHERE CreatedDate &amp;lt; THIS_WEEK   NEXT_WEEK SELECT Id FROM Opportunity WHERE CloseDate = NEXT_WEEK   LAST_MONTH SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; LAST_MONTH   THIS_MONTH SELECT Id FROM Account WHERE CreatedDate &amp;lt; THIS_MONTH   NEXT_MONTH SELECT Id FROM Opportunity WHERE CloseDate = NEXT_MONTH   LAST_90_DAYS SELECT Id FROM Account WHERE CreatedDate = LAST_90_DAYS   NEXT_90_DAYS SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; NEXT_90_DAYS   LAST_N_DAYS:n SELECT Id FROM Account WHERE CreatedDate = LAST_N_DAYS:365   NEXT_N_DAYS:n SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; NEXT_N_DAYS:15   NEXT_N_WEEKS:n SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; NEXT_N_WEEKS:4   LAST_N_WEEKS:n SELECT Id FROM Account WHERE CreatedDate = LAST_N_WEEKS:52   NEXT_N_MONTHS:n SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; NEXT_N_MONTHS:2   LAST_N_MONTHS:n SELECT Id FROM Account WHERE CreatedDate = LAST_N_MONTHS:12   THIS_QUARTER SELECT Id FROM Account WHERE CreatedDate = THIS_QUARTER   LAST_QUARTER SELECT Id FROM Account WHERE CreatedDate &amp;gt; LAST_QUARTER   NEXT_QUARTER SELECT Id FROM Account WHERE CreatedDate &amp;lt; NEXT_QUARTER   NEXT_N_QUARTERS:n SELECT Id FROM Account WHERE CreatedDate &amp;lt; NEXT_N_QUARTERS:2   LAST_N_QUARTERS:n SELECT Id FROM Account WHERE CreatedDate &amp;gt; LAST_N_QUARTERS:2   THIS_YEAR SELECT Id FROM Opportunity WHERE CloseDate = THIS_YEAR   LAST_YEAR SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; LAST_YEAR   NEXT_YEAR SELECT Id FROM Opportunity WHERE CloseDate &amp;lt; NEXT_YEAR   NEXT_N_YEARS:n SELECT Id FROM Opportunity WHERE CloseDate &amp;lt; NEXT_N_YEARS:5   LAST_N_YEARS:n SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; LAST_N_YEARS:5   THIS_FISCAL_QUARTER SELECT Id FROM Account WHERE CreatedDate = THIS_FISCAL_QUARTER   LAST_FISCAL_QUARTER SELECT Id FROM Account WHERE CreatedDate &amp;gt; LAST_FISCAL_QUARTER   NEXT_FISCAL_QUARTER SELECT Id FROM Account WHERE CreatedDate &amp;lt; NEXT_FISCAL_QUARTER   NEXT_N_FISCAL_QUARTERS:n SELECT Id FROM Account WHERE CreatedDate &amp;lt; NEXT_N_FISCAL_QUARTERS:6   LAST_N_FISCAL_QUARTERS:n SELECT Id FROM Account WHERE CreatedDate &amp;gt; LAST_N_FISCAL_QUARTERS:6   THIS_FISCAL_YEAR SELECT Id FROM Opportunity WHERE CloseDate = THIS_FISCAL_YEAR   LAST_FISCAL_YEAR SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; LAST_FISCAL_YEAR   NEXT_FISCAL_YEAR SELECT Id FROM Opportunity WHERE CloseDate &amp;lt; NEXT_FISCAL_YEAR   NEXT_N_FISCAL_YEARS:n SELECT Id FROM Opportunity WHERE CloseDate &amp;lt; NEXT_N_FISCAL_YEARS:3   LAST_N_FISCAL_YEARS:n SELECT Id FROM Opportunity WHERE CloseDate &amp;gt; LAST_N_FISCAL_YEARS:3    </description>
    </item>
    
    <item>
      <title>SOQL 기본문법(02)</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/soql02/</link>
      <pubDate>Fri, 24 May 2019 14:25:50 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/soql02/</guid>
      <description>복수 선택 Picklist 쿼리    Operator Description     = Equals the specified string.   != Does not equal the specified string.   includes Includes (contains) the specified string.   excludes Excludes (does not contain) the specified string.   ; Specifies AND for two or more strings.    SELECT Id, MSP1__c FROM CustObj__c WHERE MSP1__c = &#39;AAA;BBB&#39; SELECT Id, MSP1__c from CustObj__c WHERE MSP1__c includes (&#39;AAA;BBB&#39;,&#39;CCC&#39;)  &amp;nbsp; 비교 연산자    Operator Name Description     = Equals    !</description>
    </item>
    
    <item>
      <title>SOQL 기본문법(01)</title>
      <link>https://DKBMC-Official.github.io/post/salesforce/soql01/</link>
      <pubDate>Fri, 24 May 2019 14:17:04 +0900</pubDate>
      
      <guid>https://DKBMC-Official.github.io/post/salesforce/soql01/</guid>
      <description>SOQL SELECT 구문 SELECT fieldList [subquery][...] [TYPEOF typeOfField whenExpression[...] elseExpression END][...] FROM objectType[,...] [USINGSCOPE filterScope] [WHERE conditionExpression] [WITH [DATA CATEGORY] filteringExpression] [GROUP BY {fieldGroupByList|ROLLUP (fieldSubtotalGroupByList)|CUBE (fieldSubtotalGroupByList)} [HAVING havingConditionExpression] ] [ORDER BY fieldOrderByList {ASC|DESC} [NULLS {FIRST|LAST}] ] [LIMIT numberOfRowsToReturn] [OFF SET numberOfRowsToSkip] [FOR {VIEW | REFERENCE}[,...] ] [ UPDATE {TRACKING|VIEWSTAT}[,...] ]  &amp;nbsp; SOQL 쿼리에서 null 사용 SELECT AccountId FROM Event WHERE ActivityDate != null SELECT Id FROM Case WHERE Contact.</description>
    </item>
    
  </channel>
</rss>